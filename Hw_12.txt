 HW 10  - Store Service
----------------------------------
* Create new folder Name it "Store"  and add all created classes and interfaces to it 

1) Add class name it "Category"
  -Properties:
    Id:int
    Name: string
    ParentCatogoryId:int
-------------------	
  -Constractors:
    Category(string name,int parentcategoryId)
    Category(string name) // set parentcategoryId = 0 
    Category()	//Default Ctor	
-------------------		
  -Methods:
     Override ToString()//return Category properties Data
---------------------

Explain:

  - Id should be generated automatically and sequentially inside constructor with the help of using private static int field 
  - parentcategoryId means that this category is sub category of other category (reference to parent category id)
  - if its root(top-level) category, ParentCatogoryId should be 0 else it should have id number of other category  
  - Default ctor will put default/Empty values
 
 -Examples With List:
 ID  NAME         PARENTCATEGORY
  1   Electronics     0       
  2   Computers       1
  3   Gadgets         1
  4   Sports          0
  5   FIFA Balls      4
  6   PingPong Table  4

 Electronics
   - Computers 
   - Gadgets
 Sports
   - Fifa Balls
   - PingPong Table 

-------------------------------------------------------------
2) Create new  class name it "Product"  

 - fields and Properties
      readonly prefixId:string//private field
      Id:string
      Name:string
      Price:decimal
      Isinstock:bool
      CategoryId:string
-----------
  - Constractors:
       Product(string prefixId,int categoryId,string name,decimal price,bool isInStock)
       Product(int categoryId,string name,decimal price,bool isInStock)
       Product() //Empty Ctor
--------------	 
   - Methods:
    static Product CopyProductWithNewId(Product exsistingProduct) //Id Generated by the same as in constractor
  	Override ToString()//return object info properties data
----------------
  Explain:

  - Id should be generated automatically inside constructor with the help of using private static int field 
  - if constractor has prefixId value (as incoming ctor parameter)  then the productId will be in a format :  {prefixId}#{Id}  
    example: 	
	if prefixId is "A10X" then id will be "A10X#1"
	if prefixId is "B10Z" then id will be "B10Z#2"
         ....

    if constractor dont have prefixId then the Id will be in a format:  {categoryId}#{Id}
	example:	
	if CategoryId is 3 then Id will be 3#3
	if CategoryId is 100 Id will be 100#4
	...
---------------------------------------------------------------
3) create Interface IProductsService with the following signitures: 
    
IProductsService:

  - AddNewCategory(sting categoryName,int categoryParentId);
  - AddNewProduct(string name,decimal price,bool isinstock,int categoryId);
  - AddNewProducts(Product[] products,int categoryId);
  - RemoveProduct(string productId);
  - UpdateProduct(string productId,Product newProductInfo);
  - List<Category> GetAllTopLevelCategories();
  - List<Category> GetSubCategories(int parentCategoryID);
  - List<Product>  GetProductsCategory(int categoryId);
  - List<Product>  GetAllProductsByPrice(int lowPrice,int highPrice);
  - List<Product>  GetAllProductsByPrice(int inCategoryId,int lowPrice,int highPrice);
  - List<Product>  GetAllProducts();
  - Product FindProductByName(string productname);
  - RemoveAllProductsOfCategory(int categoryId);
  - SaveAllProductsByCategory(int categoryId); //file name will be the according to the value of of the Category Name property 	
------------------------------------------------------------------
 
4) create Implementation class of IProductsService name it "ProductsService":   

- Make this class as singelton
   Define the GetInstace of the singelton as followed:
   IProductsService GetInstance()
   {
      ...
   }
- Keep Inner List of Category and Product as readonly private fields:
private readonly  List<Category> _categories
private readonly  List<Product>  _products		
-----------------------------------------------------------------------------

5) Testing all from main:

Create static method that create ProductsService by calling the singelton GetInstance() 
And Test all its methods:

 5.1) Create objects with your own data:
    - Create 3 toplevel categories objects, with 2 subCategories objects for each category
    - Create 3 products for each sub-category
 5.2) Test all other IProductsService methods operations and print return data to console 
-------------------------------------------------------------------------------


